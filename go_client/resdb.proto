syntax = "proto3";

package resdb;

// Network message used to deliver Requests between replicas and client.
message XDBMessage {
    bytes data = 1;
}

// The request message containing requested numbers
message Request {
    enum Type {
        TYPE_NONE = 0;
        TYPE_HEART_BEAT = 1;
        TYPE_CLIENT_REQUEST = 2;
        TYPE_PRE_PREPARE = 3;
        TYPE_PREPARE = 4;
        TYPE_COMMIT = 5;
        TYPE_CLIENT_CERT = 6;
        TYPE_RESPONSE = 7;
        TYPE_RECOVERY_DATA = 8;
        TYPE_RECOVERY_DATA_RESP = 9;
        TYPE_CHECKPOINT = 10;
        TYPE_QUERY = 11;
        TYPE_REPLICA_STATE = 12; // get replica state.
        TYPE_NEW_TXNS = 14; // new transactions sent by proxy, 
                            //with batch transactions.
        TYPE_GEO_REQUEST = 15;
        TYPE_VIEWCHANGE = 16;
        TYPE_NEWVIEW= 17;
        TYPE_CUSTOM_QUERY = 18;

	TYPE_GEO_MINING_RESULT = 19;

        NUM_OF_TYPE = 20; // the total number of types.
                       // Used to create the collector.
    };
    int32 type = 1;
    bytes data = 2;
    uint64 current_view = 4;
    uint64 seq = 5;
    bytes hash = 6;
    int32 sender_id = 7;
    int64 proxy_id = 8; // the replica which receives the client request.
    bool is_system_request = 9; // whether is system information related 
                                 // request, like CMD:ADDREPLICA.
    uint64 current_executed_seq = 10;
    bool need_response = 11;
    int32 ret = 12;
}

message BatchClientRequest {
  message ClientRequest {
    Request request = 1;
    int32 id = 3;
  };
  repeated ClientRequest client_requests = 1;
  uint64 createtime = 2;
  uint64 local_id = 3;
  uint64 seq = 4;
  bytes hash = 6;
  int32 proxy_id = 7;
  bytes ex_data = 8;
  bool system_data = 9;
}

message CustomQueryRequest {
  bytes request_str = 1;
}

message CustomQueryResponse {
  bytes resp_str = 1;
}

